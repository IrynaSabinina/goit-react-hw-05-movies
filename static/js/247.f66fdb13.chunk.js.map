{"version":3,"file":"static/js/247.f66fdb13.chunk.js","mappings":"mTAKMA,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAYC,GAAAA,OAAa,CAC7BC,QARe,+BASfC,OAAQL,IAGGM,EAAc,mCAAG,sGACLJ,EAAUK,IAAI,wBADT,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAU,mCAAG,WAAMC,GAAN,yFACDR,EAAUK,IAAI,gBAAiB,CACpDF,OAAQ,CAAEK,MAAAA,KAFY,uBAChBF,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVG,EAAa,mCAAG,WAAMC,GAAN,yFACJV,EAAUK,IAAV,iBAAwBK,IADpB,uBACnBJ,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbK,EAAY,mCAAG,WAAMD,GAAN,yFACHV,EAAUK,IAAV,iBAAwBK,EAAxB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnB,CAAEA,KAAAA,IAFiB,2CAAH,sDAKZM,EAAgB,mCAAG,WAAMF,GAAN,yFACPV,EAAUK,IAAV,iBAAwBK,EAAxB,aADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,uD,gFCM7B,UArCc,WACZ,OAA8BO,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAaK,GAASG,MAAK,YAAe,IAAZb,EAAW,EAAXA,KAC5BS,EAAWT,QAEZ,CAACU,KAGF,8BACGF,IACC,wBACGA,EAAQM,MAAQN,EAAQM,KAAKC,OAAS,EACrCP,EAAQM,KAAKE,KAAI,SAAAC,GAAM,OACrB,2BACE,gBACEC,IACED,EAAOE,aAAP,yCACsCF,EAAOE,cAD7C,qEAIFC,IAAKH,EAAOI,QAEd,uBAAIJ,EAAOI,QACX,uBAAIJ,EAAOK,cAVJL,EAAOb,QAclB","sources":["API/api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5e2c39ea82f0a596cc3267d12df3039c';\n\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nconst moviesApi = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const fetchTrandFilm = async () => {\n  const { data } = await moviesApi.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchSearh = async query => {\n  const { data } = await moviesApi.get('/search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchFilmById = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fethFilmCast = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}/credits`);\n  return { data };\n};\n\nexport const fetchFilmReviews = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}/reviews`);\n  return data;\n};\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fethFilmCast } from '../../API/api';\n\n const Cast = () => {\n  const [credits, setCredits] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fethFilmCast(movieId).then(({ data }) => {\n      setCredits(data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {credits && (\n        <ul>\n          {credits.cast && credits.cast.length > 0 ? (\n            credits.cast.map(credit => (\n              <li key={credit.id}>\n                <img\n                  src={\n                    credit.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${credit.profile_path}`\n                      : `https://i.gifer.com/origin/3f/3fcf565ccc553afcfd89858c97304705.gif`\n                  }\n                  alt={credit.name}\n                />\n                <p>{credit.name}</p>\n                <p>{credit.character}</p>\n              </li>\n            ))\n          ) : (\n            <b>Nobody was found!</b>\n          )}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Cast"],"names":["defaultParams","api_key","moviesApi","axios","baseURL","params","fetchTrandFilm","get","data","fetchSearh","query","fetchFilmById","id","fethFilmCast","fetchFilmReviews","useState","credits","setCredits","movieId","useParams","useEffect","then","cast","length","map","credit","src","profile_path","alt","name","character"],"sourceRoot":""}