{"version":3,"file":"static/js/186.dd118c16.chunk.js","mappings":"mTAKMA,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAYC,GAAAA,OAAa,CAC7BC,QARe,+BASfC,OAAQL,IAGGM,EAAc,mCAAG,sGACLJ,EAAUK,IAAI,wBADT,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAU,mCAAG,WAAMC,GAAN,yFACDR,EAAUK,IAAI,gBAAiB,CACpDF,OAAQ,CAAEK,MAAAA,KAFY,uBAChBF,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVG,EAAa,mCAAG,WAAMC,GAAN,yFACJV,EAAUK,IAAV,iBAAwBK,IADpB,uBACnBJ,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbK,EAAY,mCAAG,WAAMD,GAAN,yFACHV,EAAUK,IAAV,iBAAwBK,EAAxB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnB,CAAEA,KAAAA,IAFiB,2CAAH,sDAKZM,EAAgB,mCAAG,WAAMF,GAAN,yFACPV,EAAUK,IAAV,iBAAwBK,EAAxB,aADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,uD,+ECA7B,UA/BiB,WACf,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAiBC,GAASM,MAAK,SAAAb,GAC7BW,EAAWX,EAAKc,cAEjB,CAACP,KAGF,8BACGG,IACC,wBACGA,GAAWA,EAAQK,OAAS,EAC3BL,EAAQM,KAAI,SAAAC,GAAK,OACf,yBACE,4BACE,yBAAIA,EAAMC,OAAV,QACA,uBAAID,EAAME,cAHLF,EAAMb,QAQjB","sources":["API/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5e2c39ea82f0a596cc3267d12df3039c';\n\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nconst moviesApi = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const fetchTrandFilm = async () => {\n  const { data } = await moviesApi.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchSearh = async query => {\n  const { data } = await moviesApi.get('/search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchFilmById = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fethFilmCast = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}/credits`);\n  return { data };\n};\n\nexport const fetchFilmReviews = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}/reviews`);\n  return data;\n};\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchFilmReviews } from '../../API/api';\n\n const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState();\n\n  useEffect(() => {\n    fetchFilmReviews(movieId).then(data => {\n      setReviews(data.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && (\n        <ul>\n          {reviews && reviews.length > 0 ? (\n            reviews.map(revie => (\n              <li key={revie.id}>\n                <div>\n                  <b>{revie.author}:</b>\n                  <p>{revie.content}</p>\n                </div>\n              </li>\n            ))\n          ) : (\n            <b>No reviews yet!</b>\n          )}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Reviews;"],"names":["defaultParams","api_key","moviesApi","axios","baseURL","params","fetchTrandFilm","get","data","fetchSearh","query","fetchFilmById","id","fethFilmCast","fetchFilmReviews","movieId","useParams","useState","reviews","setReviews","useEffect","then","results","length","map","revie","author","content"],"sourceRoot":""}