{"version":3,"file":"static/js/820.6392a526.chunk.js","mappings":"mTAKMA,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAYC,GAAAA,OAAa,CAC7BC,QARe,+BASfC,OAAQL,IAGGM,EAAc,mCAAG,sGACLJ,EAAUK,IAAI,wBADT,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAU,mCAAG,WAAMC,GAAN,yFACDR,EAAUK,IAAI,gBAAiB,CACpDF,OAAQ,CAAEK,MAAAA,KAFY,uBAChBF,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVG,EAAa,mCAAG,WAAMC,GAAN,yFACJV,EAAUK,IAAV,iBAAwBK,IADpB,uBACnBJ,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbK,EAAY,mCAAG,WAAMD,GAAN,yFACHV,EAAUK,IAAV,iBAAwBK,EAAxB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnB,CAAEA,KAAAA,IAFiB,2CAAH,sDAKZM,EAAgB,mCAAG,WAAMF,GAAN,yFACPV,EAAUK,IAAV,iBAAwBK,EAAxB,aADO,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,uD,4GCjChBO,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OACE,kBAAMH,SAXa,SAAAI,GACnBA,EAAMC,iBAEgB,KAAlBH,EAAOI,QACTC,EAAAA,GAAAA,MAAY,qBAEdP,EAASE,GACTC,EAAU,KAIV,WACE,kBACEK,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOX,EACPY,SAvBqB,SAAAV,GACzBD,EAAUC,EAAMW,cAAcF,MAAMG,mBAwBlC,mBAAQR,KAAK,SAAb,wB,6BCqBN,EA7CmB,WACjB,OAA0BP,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcuB,EAAd,KACA,GAA8ChB,EAAAA,EAAAA,UAAS,IAAvD,eAAOiB,EAAP,KAAwBC,EAAxB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIL,IACZM,EAAAA,EAAAA,YAAU,WACM,KAAVjC,IAGFD,EAAAA,EAAAA,IAAWC,GAAOkC,MAAK,SAAApC,GACjBA,EAAKqC,cAAgB,EACvBV,EAAmB3B,EAAKsC,SAExBvB,EAAAA,GAAAA,MAAY,cAIjB,CAACb,IASJ,OACE,iCACE,SAACK,EAAD,CAAWC,SATU,SAAA+B,GACnBrC,IAAUqC,IAGdd,EAASc,GACTT,EAAgB,CAAE5B,MAAOqC,QAKtBrC,IACC,0BACGwB,EAAgBc,KAAI,SAAAC,GAAK,OACxB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMrC,IAAMuC,MAAOZ,EAAxC,SACGU,EAAMG,SAFFH,EAAMrC,QAMjB,SAAC,KAAD","sources":["API/api.js","components/Searchbar/Searchbar.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '5e2c39ea82f0a596cc3267d12df3039c';\n\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nconst moviesApi = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const fetchTrandFilm = async () => {\n  const { data } = await moviesApi.get('/trending/movie/week');\n  return data;\n};\n\nexport const fetchSearh = async query => {\n  const { data } = await moviesApi.get('/search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchFilmById = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fethFilmCast = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}/credits`);\n  return { data };\n};\n\nexport const fetchFilmReviews = async id => {\n  const { data } = await moviesApi.get(`/movie/${id}/reviews`);\n  return data;\n};\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n  const handleSearchChange = event => {\n    setSearch(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (search.trim() === '') {\n      toast.error('Please enter film');\n    }\n    onSubmit(search);\n    setSearch('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={search}\n        onChange={handleSearchChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Searchbar } from '../components/Searchbar/Searchbar';\nimport { fetchSearh } from '../API/api';\nimport { Link, Outlet, useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [searchMovieList, setSearchMovieList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  console.log(searchParams);\n  useEffect(() => {\n    if (query === '') {\n      return;\n    } else {\n      fetchSearh(query).then(data => {\n        if (data.total_results > 0) {\n          setSearchMovieList(data.results);\n        } else {\n          toast.error('Oops!');\n        }\n      });\n    }\n  }, [query]);\n\n  const handleFormSubmit = searchNow => {\n    if (query === searchNow) {\n      return;\n    }\n    setQuery(searchNow);\n    setSearchParams({ query: searchNow });\n  };\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {query && (\n        <ul>\n          {searchMovieList.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={location}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n          <Outlet></Outlet>\n        </ul>\n      )}\n    </>\n  );\n};\nexport default MoviesPage;\n"],"names":["defaultParams","api_key","moviesApi","axios","baseURL","params","fetchTrandFilm","get","data","fetchSearh","query","fetchFilmById","id","fethFilmCast","fetchFilmReviews","Searchbar","onSubmit","useState","search","setSearch","event","preventDefault","trim","toast","type","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","setQuery","searchMovieList","setSearchMovieList","useSearchParams","searchParams","setSearchParams","location","useLocation","console","log","useEffect","then","total_results","results","searchNow","map","movie","to","state","title"],"sourceRoot":""}